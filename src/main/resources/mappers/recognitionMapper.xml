<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 게시판 네임스페이스(사용영역) 설정 -->
<mapper namespace="com.gsitm.meeting.mappers.recognitionMapper">
	<select id="resList" resultType="com.gsitm.meeting.reservation.dto.ReservationDTO$ReservationTest" >
		select res_id resId,e.emp_name empName, b.br_name brName,mr.mr_name mrName,to_char(res_time,'YYYY-MM-DD" "HH24:MI:SS') resDate,to_char(res_start_time,'YYYY-MM-DD" "HH24:MI:SS') resStartDate,to_char(res_end_time,'YYYY-MM-DD" "HH24:MI:SS') resEndDate,
		       res_purpose resPurpose,res_attend_cnt resAttendCnt,res_add_request resAddRequest,res_state resState,res_snack resSnack,
		       res_type resType,res_cancle resCancle,res_cost resCost,res_outside resOutside   
		from employee e,reservation r, meeting_room mr,branch b
		where e.emp_id=r.emp_id
        and b.br_id = mr.br_id
		and mr.mr_id = r.mr_id
	</select>
	<select id="resNewList" resultType="string" parameterType="string">
		select res_state resState
		from employee e,reservation r, meeting_room mr
		where e.emp_id=r.emp_id
		and r.mr_id = mr.mr_id
		and res_id=#{resId}
	</select>
	<update id="updateResState">
		UPDATE reservation
		SET res_state='res_2'
		WHERE res_id = #{redId} 
	</update>
	<select id="branchList" resultType="BranchVO">
		select br_name brName,br_id brId from branch
	</select>
	<select id="allPayment" resultType="int">
		select sum(dept_cost) deptCost
        from department
	</select>
	<select id="allDeptPayment" resultType="com.gsitm.meeting.branch.dto.DepartmentDTO$DepartmentTest">
		select dept_id deptId,dept_name deptName, dept_cost deptCost,br_name brName
		from department d, branch b
		where d.br_id=b.br_id
	</select>
	<select id="myPaymentBySearch" resultType="com.gsitm.meeting.branch.dto.DepartmentDTO$DepartmentTest">
		select dept_id deptId,dept_name deptName, dept_cost deptCost,br_name brName
		from department d, branch b,reservation r
		where d.br_id=b.br_id
		<if test="searchtype !=null">
			<if test="searchtype == 'allOfList'.toString()">
				
			</if>
			<if test="searchtype == 'oneWeek'.toString()">
				<![CDATA[and ((sysdate - 7) < res_end_time)]]>
			</if>
			<if test="searchtype == 'oneMonth'.toString()">
				<![CDATA[and ((sysdate - 30) < res_end_time)]]> 
			</if>
			<if test="searchtype == 'sixMonth'.toString()">
				<![CDATA[and ((sysdate - 180) < res_end_time)]]> 
			</if>
			<if test="searchtype == 'oneYear'.toString()">
				<![CDATA[and ((sysdate - 365) < res_end_time)]]> 
			</if>
		</if>
		and res_state ='res_5'
		group by dept_id,dept_name,dept_cost,br_name
		order by dept_id
	</select>
</mapper>