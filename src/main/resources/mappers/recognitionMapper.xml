<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 게시판 네임스페이스(사용영역) 설정 -->
<mapper namespace="com.gsitm.meeting.mappers.recognitionMapper">


	<select id="resList" resultType="com.gsitm.meeting.reservation.dto.ReservationDTO$ReservationTest" >
	SELECT b.*, e.emp_email headEmail 
	FROM   employee e, 
	       (SELECT d.dept_name deptName, 
	               a.*, 
	               dh.emp_id   headId 
	        FROM   department_head dh, 
	               department d, 
	               (SELECT res_id                                             resId, 
	                       e.emp_id                                           empId, 
	                       e.dept_id                                          deptId 
	                       , 
	                       e.emp_name 
	                       empName, 
	                       b.br_name                                          brName 
	                       , 
	                       mr.mr_name 
	                       mrName, 
	                       To_char(res_time, 'YYYY-MM-DD" "HH24:MI:SS') 
	                       resDate, 
	                       To_char(res_start_time, 'YYYY-MM-DD" "HH24:MI:SS') 
	                       resStartDate, 
	                       To_char(res_end_time, 'YYYY-MM-DD" "HH24:MI:SS') 
	                       resEndDate, 
	                       res_purpose 
	                       resPurpose, 
	                       res_attend_cnt 
	                       resAttendCnt, 
	                       res_add_request 
	                       resAddRequest,
	                       r.mr_id 
	                       mrId, 
	                       res_state 
	                       resState, 
	                       res_snack 
	                       resSnack, 
	                       res_type 
	                       resType, 
	                       res_cancle 
	                       resCancle, 
	                       res_cost 
	                       resCost, 
	                       res_outside 
	                       resOutside, 
	                       e.emp_email 
	                       empEmail 
	                FROM   employee e, 
	                       reservation r, 
	                       meeting_room mr, 
	                       branch b 
	                WHERE  e.emp_id = r.emp_id 
	                       AND b.br_id = mr.br_id 
	                       AND mr.mr_id = r.mr_id 
	                ORDER  BY res_id DESC) a 
	        WHERE  a.deptid = d.dept_id 
	               AND dh.dept_id = d.dept_id) b 
	WHERE  b.headid = e.emp_id 
	</select>
	<!-- <update id="updateDeptCost">
		update department
		set DEPT_COST=dept_cost+#{resCost}
		where dept_id=#{deptId}
	</update> -->
	<select id="resNewList" resultType="string" parameterType="string">
		select res_state resState
		from employee e,reservation r, meeting_room mr
		where e.emp_id=r.emp_id
		and r.mr_id = mr.mr_id
		and res_id=#{resId}
	</select>
	<update id="updateResState">
		UPDATE reservation
		SET res_state='res_2'
		WHERE res_id = #{redId} 
	</update>
	<select id="branchList" resultType="BranchVO">
		select br_name brName,br_id brId from branch
	</select>
	<select id="allPayment" resultType="int">
		select sum(dept_cost) deptCost
        from department
	</select>
	<select id="allDeptPayment" resultType="com.gsitm.meeting.branch.dto.DepartmentDTO$DepartmentTest">
		select dept_id deptId,dept_name deptName, dept_cost deptCost,br_name brName
		from department d, branch b
		where d.br_id=b.br_id
	</select>
	<select id="myPaymentBySearch" resultType="com.gsitm.meeting.branch.dto.DepartmentDTO$DepartmentTest">
		select dept_id deptId,dept_name deptName, dept_cost deptCost,br_name brName
		from department d, branch b,reservation r
		where d.br_id=b.br_id
		<if test="searchtype !=null">
			<if test="searchtype == 'allOfList'.toString()">
				
			</if>
			<if test="searchtype == 'oneWeek'.toString()">
				<![CDATA[and ((sysdate - 7) < res_start_time)]]>
			</if>
			<if test="searchtype == 'oneMonth'.toString()">
				<![CDATA[and ((sysdate - 30) < res_start_time)]]> 
			</if>
			<if test="searchtype == 'sixMonth'.toString()">
				<![CDATA[and ((sysdate - 180) < res_start_time)]]> 
			</if>
			<if test="searchtype == 'oneYear'.toString()">
				<![CDATA[and ((sysdate - 365) < res_start_time)]]> 
			</if>
		</if>
		and res_state ='res_2'
		group by dept_id,dept_name,dept_cost,br_name
		order by dept_id
	</select>
	<update id="approval" parameterType="string">
		update reservation
		set res_state = 'res_2'
		where res_id=#{resId}
		and res_state='res_1'
	</update>
	<update id="back" parameterType="string">
		update reservation
		set res_state = 'res_3'
		where res_id=#{resId}
		and res_state='res_1'
	</update>
	<select id="getReservationBySearchtype" resultType="com.gsitm.meeting.reservation.dto.ReservationDTO$ReservationTest">
		SELECT b.*, e.emp_email headEmail 
		FROM   employee e, 
		       (SELECT d.dept_name deptName, 
		               a.*, 
		               dh.emp_id   headId 
		        FROM   department_head dh, 
		               department d, 
		               (SELECT res_id                                             resId, 
		                       e.emp_id                                           empId, 
		                       e.dept_id                                          deptId 
		                       , 
		                       e.emp_name 
		                       empName, 
		                       b.br_name                                          brName 
		                       , 
		                       mr.mr_name 
		                       mrName, 
		                       To_char(res_time, 'YYYY-MM-DD" "HH24:MI:SS') 
		                       resDate, 
		                       To_char(res_start_time, 'YYYY-MM-DD" "HH24:MI:SS') 
		                       resStartDate, 
		                       To_char(res_end_time, 'YYYY-MM-DD" "HH24:MI:SS') 
		                       resEndDate, 
		                       res_purpose 
		                       resPurpose, 
		                       res_attend_cnt 
		                       resAttendCnt, 
		                       res_add_request 
		                       resAddRequest 
		                       , 
		                       res_state 
		                       resState, 
		                       res_snack 
		                       resSnack, 
		                       res_type 
		                       resType, 
		                       res_cancle 
		                       resCancle, 
		                       res_cost 
		                       resCost, 
		                       res_outside 
		                       resOutside, 
		                       e.emp_email 
		                       empEmail 
		                FROM   employee e, 
		                       reservation r, 
		                       meeting_room mr, 
		                       branch b 
		                WHERE  e.emp_id = r.emp_id 
		                       AND b.br_id = mr.br_id 
		                       AND mr.mr_id = r.mr_id 
		    <choose>             
				<when test="brId=='allBrId'.toString()">
				
				</when>
				<otherwise>and b.br_id=#{brId}</otherwise>
			</choose>
			<if test="searchtype !=null">
				<if test="searchtype == 'allOfList'.toString()">
					
				</if>
				<if test="searchtype == 'oneWeek'.toString()">
					<![CDATA[and ((sysdate - 7) < res_start_time)]]>
				</if>
				<if test="searchtype == 'oneMonth'.toString()">
					<![CDATA[and ((sysdate - 30) < res_start_time)]]> 
				</if>
				<if test="searchtype == 'sixMonth'.toString()">
					<![CDATA[and ((sysdate - 180) < res_start_time)]]> 
				</if>
				<if test="searchtype == 'oneYear'.toString()">
					<![CDATA[and ((sysdate - 365) < res_start_time)]]> 
				</if>
			</if>
			ORDER  BY res_id DESC) a 
		        WHERE  a.deptid = d.dept_id 
		               AND dh.dept_id = d.dept_id) b 
		WHERE  b.headid = e.emp_id 
	</select>
	
	<!--1차승인목록  -->
	<select id="resListForHead" resultType="com.gsitm.meeting.reservation.dto.ReservationDTO$ReservationTest" >
		SELECT b.*, e.emp_email headEmail 
		FROM   employee e, 
		       (SELECT d.dept_name deptName, 
		               a.*, 
		               dh.emp_id   headId 
		        FROM   department_head dh, 
		               department d, 
		               (SELECT res_id                                             resId, 
		                       e.emp_id                                           empId, 
		                       e.dept_id                                          deptId 
		                       , 
		                       e.emp_name 
		                       empName, 
		                       b.br_name                                          brName 
		                       , 
		                       mr.mr_name 
		                       mrName, 
		                       To_char(res_time, 'YYYY-MM-DD" "HH24:MI:SS') 
		                       resDate, 
		                       To_char(res_start_time, 'YYYY-MM-DD" "HH24:MI:SS') 
		                       resStartDate, 
		                       To_char(res_end_time, 'YYYY-MM-DD" "HH24:MI:SS') 
		                       resEndDate, 
		                       res_purpose 
		                       resPurpose, 
		                       res_attend_cnt 
		                       resAttendCnt, 
		                       res_add_request 
		                       resAddRequest 
		                       , 
		                       res_state 
		                       resState, 
		                       res_snack 
		                       resSnack, 
		                       res_type 
		                       resType, 
		                       res_cancle 
		                       resCancle, 
		                       res_cost 
		                       resCost, 
		                       res_outside 
		                       resOutside, 
		                       e.emp_email 
		                       empEmail 
		                FROM   employee e, 
		                       reservation r, 
		                       meeting_room mr, 
		                       branch b 
		                WHERE  e.emp_id = r.emp_id 
		                       AND b.br_id = mr.br_id 
		                       AND mr.mr_id = r.mr_id 
	                           AND res_state='res_0'
		                ORDER  BY res_id DESC) a 
		        WHERE  a.deptid = d.dept_id 
		               AND dh.dept_id = d.dept_id) b 
		WHERE  b.headid = e.emp_id
	</select>
	<update id="approvalByHead" parameterType="string">
		update reservation
		set res_state = 'res_1'
		where res_id=#{resId}
		and res_state='res_0'
	</update>
	<update id="backByHead" parameterType="string">
		update reservation
		set res_state = 'res_3'
		where res_id=#{resId}
		and res_state='res_0'
	</update>
	
	<select id="allEquipList" resultType="equipmentReservationVO">
		select substr(eq_id,1,1) eqId, res_id res_id from equipment_reservation
	</select>
	
	<select id="empAuthority" resultType="com.gsitm.meeting.reservation.dto.RecognitionDTO$EmpAuthority">
		select emp_id empId, emp_name empName, dept_name deptName, authority from employee e, authorities a, department d where e.emp_id = a.id and e.dept_id = d.dept_id
	</select>
	
	<update id="updateAuthority" parameterType="string">
		update authorities set authority = 'ROLE_ADMIN' where id = #{empId}
	</update>
	
	<select id="getDeptIdDeptCostForUpdateDeptCost" resultType="com.gsitm.meeting.reservation.dto.AttendeeDTO$forUpdateCost" parameterType="string">
		SELECT distinct(dept_id) deptId,dept_cost deptCost
		FROM attendee
		where res_id = #{resId}
		AND attend_type='att_type_0'
	</select>
	<update id="updateDeptCost" parameterType="com.gsitm.meeting.reservation.dto.AttendeeDTO$forUpdateCost">
		UPDATE department 
		SET dept_cost = dept_cost+#{deptCost} 
		where dept_id = #{deptId}
	</update>
	<update id="updateFinalRecognition">
		update recognition
		set man_id = #{adminId}, rec_accept_date = sysdate
		where res_id=#{resId}
	</update>
	<update id="updateFinalNotRecognition">
		update recognition
		set man_id = #{adminId}, rec_refuse=#{str}
		where res_id=#{resId}
	</update>
	<update id="updateByHeadRecognition">
		update recognition
		set dept_head_id = #{adminId}, rec_accept_date = to_char(sysdate,'YYYY-MM-DD" "HH24:MI:SS')
		where res_id=#{resId}
	</update>
	<update id="updateByHeadNotRecognition">
		update recognition
		set dept_head_id = #{adminId}, rec_refuse=#{inputValue}
		where res_id=#{resId}
	</update>
	<select id="recogList" resultType="RecognitionVO">
		select rc.REC_ID recId,
		       NVL(e.emp_name,' ') deptHeadId,
		       NVL(s.emp_name,' ') manId,
		       NVL(To_char(REC_ACCEPT_DATE, 'YYYY-MM-DD" "HH24:MI:SS'),' ')  recAcceptDate, 
		       RES_ID resId,
		       NVL(REC_REFUSE,' ') recRefuse
		from recognition rc, employee e,(select emp_name,rec_id from recognition r,employee ep where r.man_id=ep.emp_id) s
		where rc.dept_head_id = e.emp_id(+)
		and s.rec_id = rc.rec_id(+)
		order by rc.rec_id
	</select>
</mapper>